  <img class="picture logo" src="/images/logo2.png" />
  <img class="picture bird" src="/images/bird_single.png" />
  <img class="picture crosshair" src="/images/crosshair.png" />
  <img class="info" src="/images/level4info.png" />
  <img class="blurb" src="/images/level4blurb.png" />
<script type="text/javascript">

var game = new Phaser.Game(1024, 768, Phaser.AUTO, '', { preload: preload, create: create, update: update, render: render });

function preload(){

    game.load.image('logo', '/images/logo2.png');

    // level 4 sounds

    // game.load.audio('gunshot', '/sounds/gunshot.mp3');
    game.load.audio('flockSound', '/sounds/geese loop.mp3');
    game.load.audio('splash', '/sounds/surfbort_short.mp3');
    game.load.audio('yipee', '/sounds/yipee.mp3');
    game.load.audio('wee', '/sounds/wee.mp3');
    game.load.audio('fallSound', '/sounds/whoosh5.mp3');

    // level 4 images

    // background
    game.load.image('background', '/images/background.png');
    game.load.image('cloud1', '/images/cloud_1.png');
    game.load.image('cloud2', '/images/cloud_2.png');
    game.load.image('cloud3', '/images/cloud_3.png');
    game.load.image('cloud4', '/images/cloud_4.png');
    game.load.image('cloud5', '/images/cloud_5.png');
    game.load.image('cloud6', '/images/cloud_6.png');
    game.load.image('tree', '/images/tree.png');
    game.load.image('sawmill', '/images/house_with_window_curtains.png');
    // interactables
    game.load.spritesheet('crosshair', '/images/crosshair_sprite.png', 400, 400);
    // animals
    game.load.spritesheet('player_bird', '/images/bird sprite10-1.png', 84, 80);
    game.load.spritesheet('bird2', '/images/birdsprite5-1.png', 84, 80);
    game.load.spritesheet('bird7', '/images/birdsprite3-1.png', 84, 80);
}

// var birdie;
var crosshair;
var cursors;
var background;
var birdFriend1;
var birdFriend2;
var birdFriend3;
var birdFriend4;
var birdFriend5;
var birdFriend6;
// var gunshot;
var hairsight;
// var timer;
// var timer2;
var total = 0;
var total2 = 0;


function create(){

    // gunshot = game.add.audio('gunshot');
    flockSound = game.add.audio('flockSound');
    splash = game.add.audio('splash');
    yipee = game.add.audio('yipee');
    wee = game.add.audio('wee');
    fallSound = game.add.audio('fallSound');

    flockSound.play();

    game.physics.startSystem(Phaser.Physics.ARCADE);
    enterKey = game.input.keyboard.addKey(Phaser.Keyboard.ENTER);

    // background image and scaled
    background = game.add.image(0, 0, 'background');
    background.scale.x = game.rnd.realInRange(4, 4);
    background.scale.y = game.rnd.realInRange(4, 4);

    createCloud = function(x, y, xVelocity, image)
    {
        cloud = game.add.sprite(x, y, image);
        game.physics.arcade.enable(cloud);
        cloud.enableBody = true;
        cloud.body.immovable = true;
        cloud.body.collideWorldBounds = true;
        cloud.body.velocity.x = xVelocity;
        cloud.body.bounce.setTo(1, 1);
    }

    createCloud(755, 385, -3, 'cloud3');
    createCloud(35, 100, 5, 'cloud4');

    tree = game.add.image(-450, 100, 'tree');
    tree.scale.x = game.rnd.realInRange(1.5, 1.5);
    tree.scale.y = game.rnd.realInRange(1.5, 1.5);



    // randomized bird sprites
    // randomBird = function()
    // {
    //     var bird_array = ["bird2", "bird7"]
    //     color = bird_array[Math.floor(bird_array.length * Math.random())];
    //     return color
    // }


    // bird = bird.create(0, 400, random_bird);


    birdFriend1 = game.add.sprite(game.world.randomX, game.world.randomY, 'bird2')
    birdFriend1.enableBody = true;
    game.physics.arcade.enable(birdFriend1);
    birdFriend1.body.collideWorldBounds = true;
    birdFriend1.minSpeed = -180;
    birdFriend1.maxSpeed = 180;
    birdFriend1.body.velocity.x = 180
    birdFriend1.body.velocity.y = 180
    birdFriend1.body.bounce.setTo(1, 1);
    birdFriend1.body.immovable = true;

    birdFriend2 = game.add.sprite(game.world.randomX, game.world.randomY, 'bird7')
    birdFriend2.enableBody = true;
    game.physics.arcade.enable(birdFriend2);
    birdFriend2.body.collideWorldBounds = true;
    birdFriend2.minSpeed = -180;
    birdFriend2.maxSpeed = 180;
    birdFriend2.body.velocity.x = -180
    birdFriend2.body.velocity.y = -180
    birdFriend2.body.bounce.setTo(1, 1);
    birdFriend2.body.immovable = true;

    birdFriend3 = game.add.sprite(game.world.randomX, game.world.randomY, 'bird2')
    birdFriend3.enableBody = true;
    game.physics.arcade.enable(birdFriend3);
    birdFriend3.body.collideWorldBounds = true;
    birdFriend3.minSpeed = -180;
    birdFriend3.maxSpeed = 180;
    birdFriend3.body.velocity.x = 180
    birdFriend3.body.velocity.y = -180
    birdFriend3.body.bounce.setTo(1, 1);
    birdFriend3.body.immovable = true;


    birdFriend4 = game.add.sprite(715, 475, 'bird7')
    birdFriend4.enableBody = true;
    game.physics.arcade.enable(birdFriend4);
    birdFriend4.body.collideWorldBounds = true;
    birdFriend4.minSpeed = -180;
    birdFriend4.maxSpeed = 180;
    birdFriend4.body.velocity.x = 180
    birdFriend4.body.velocity.y = 180
    birdFriend4.body.bounce.setTo(1, 1);
    birdFriend4.body.immovable = true;

    birdFriend5 = game.add.sprite(game.world.randomX, 400, 'bird2')
    birdFriend5.enableBody = true;
    game.physics.arcade.enable(birdFriend5);
    birdFriend5.body.collideWorldBounds = true;
    birdFriend5.minSpeed = -180;
    birdFriend5.maxSpeed = 180;
    birdFriend5.body.velocity.x = 180
    birdFriend5.body.velocity.y = 0
    birdFriend5.body.bounce.setTo(1, 1);
    birdFriend5.body.immovable = true;

    birdFriend6 = game.add.sprite(game.world.randomX, 300, 'bird7')
    birdFriend6.enableBody = true;
    game.physics.arcade.enable(birdFriend6);
    birdFriend6.body.collideWorldBounds = true;
    birdFriend6.minSpeed = -180;
    birdFriend6.maxSpeed = 180;
    birdFriend6.body.velocity.x = -180
    birdFriend6.body.velocity.y = 0
    birdFriend6.body.bounce.setTo(1, 1);
    birdFriend6.body.immovable = true;



    sawmill = game.add.image(730, 700, 'sawmill');
    sawmill.scale.x = game.rnd.realInRange(2, 2);
    sawmill.scale.y = game.rnd.realInRange(2, 2);

    crosshair = game.add.sprite(birdFriend4.body.x -105, birdFriend4.body.y -105, 'crosshair');
    crosshair.scale.x = game.rnd.realInRange(.25, .25);
    crosshair.scale.y = game.rnd.realInRange(.25, .25);
    crosshair.enableBody = false;
    game.physics.arcade.enable(crosshair);
    crosshair.body.collideWorldBounds = true;
    crosshair.body.velocity.x = 200;
    crosshair.body.velocity.y = 200;
    crosshair.body.bounce.setTo(1, 1);

    // var logo = game.add.image(475, -20, 'logo');
    // logo.scale.x = game.rnd.realInRange(.26, .26);
    // logo.scale.y = game.rnd.realInRange(.26, .26);

    // game.add.text(50, 50, "LEVEL 4/4", { font: "75px Courier", fill: "RGBA(96, 159, 61, 1)"});
    // game.add.text(0, -1820, "_", { font: "1900px Arial", fill: "RGBA(170, 201, 212, .8)"});
    // game.add.text(0, -1700, "_", { font: "1900px Arial", fill: "RGBA(170, 201, 212, .8)"});
    // game.add.text(0, -1580, "_", { font: "1900px Arial", fill: "RGBA(170, 201, 212, .8)"});
    // game.add.text(0, -1460, "_", { font: "1900px Arial", fill: "RGBA(170, 201, 212, .8)"});
    // game.add.text(35, 200, "This human is a terrible shot.", { font: "48px OpenSans", fill: "#333333"});
    // game.add.text(35, 250, "Help him catch his next big meal.", { font: "48px OpenSans", fill: "#333333"});
    // game.add.text(35, 300, "Fly into the crosshair as the gun fires.", { font: "48px OpenSans", fill: "#333333"});
    // game.add.text(35, 410, "Controls:", { font: "48px OpenSans", fill: "#333333"});
    // game.add.text(255, 410, "Up, Down, Right, Left", { font: "48px OpenSans", fill: "blue"});
    // game.add.text(255, 460, "Hold SPACEBAR for SPEED BOOST", { font: "48px OpenSans", fill: "blue"});
    // game.add.text(35, 550, "Press [Enter] to begin.", { font: "32px OpenSans", fill: "purple"});

    // birdie = game.add.sprite(820, 120, 'player_bird')
    // birdie.scale.x = game.rnd.realInRange(2, 2);
    // birdie.scale.y = game.rnd.realInRange(2, 2);
    // birdie.enableBody = true;
    // game.physics.arcade.enable(birdie);
    // birdie.body.collideWorldBounds = true;
    // birdie.body.bounce.setTo(1, 1);

    crosshair.animations.add('bang', [1], 0, true);
    crosshair.animations.add('regular', [0], 0, true);

    // birdie.animations.add('left', [0, 1, 2, 1], 6, true);
    birdFriend1.animations.add('left', [0, 1, 2, 1], 6, true);
    birdFriend2.animations.add('left', [0, 1, 2, 1], 6, true);
    birdFriend3.animations.add('left', [0, 1, 2, 1], 6, true);
    birdFriend4.animations.add('left', [0, 1, 2, 1], 6, true);
    birdFriend5.animations.add('left', [0, 1, 2, 1], 6, true);
    birdFriend6.animations.add('left', [0, 1, 2, 1], 6, true);

    // birdie.animations.add('right', [9, 10, 11, 10], 6, true);
    birdFriend1.animations.add('right', [9, 10, 11, 10], 6, true);
    birdFriend2.animations.add('right', [9, 10, 11, 10], 6, true);
    birdFriend3.animations.add('right', [9, 10, 11, 10], 6, true);
    birdFriend4.animations.add('right', [9, 10, 11, 10], 6, true);
    birdFriend5.animations.add('right', [9, 10, 11, 10], 6, true);
    birdFriend6.animations.add('right', [9, 10, 11, 10], 6, true);

    // birdie.animations.add('up', [21, 22, 23, 22], 6, true);
    birdFriend1.animations.add('up', [21, 22, 23, 22], 6, true);
    birdFriend2.animations.add('up', [21, 22, 23, 22], 6, true);
    birdFriend3.animations.add('up', [21, 22, 23, 22], 6, true);
    birdFriend4.animations.add('up', [21, 22, 23, 22], 6, true);
    birdFriend5.animations.add('up', [21, 22, 23, 22], 6, true);
    birdFriend6.animations.add('up', [21, 22, 23, 22], 6, true);

    // birdie.animations.add('down', [18, 19, 20, 19], 6, true);
    birdFriend1.animations.add('down', [18, 19, 20, 19], 6, true);
    birdFriend2.animations.add('down', [18, 19, 20, 19], 6, true);
    birdFriend3.animations.add('down', [18, 19, 20, 19], 6, true);
    birdFriend4.animations.add('down', [18, 19, 20, 19], 6, true);
    birdFriend5.animations.add('down', [18, 19, 20, 19], 6, true);
    birdFriend6.animations.add('down', [18, 19, 20, 19], 6, true);

    // birdie.animations.add('left_up', [3, 4, 5, 4], 6, true);
    birdFriend1.animations.add('left_up', [3, 4, 5, 4], 6, true);
    birdFriend2.animations.add('left_up', [3, 4, 5, 4], 6, true);
    birdFriend3.animations.add('left_up', [3, 4, 5, 4], 6, true);
    birdFriend4.animations.add('left_up', [3, 4, 5, 4], 6, true);
    birdFriend5.animations.add('left_up', [3, 4, 5, 4], 6, true);
    birdFriend6.animations.add('left_up', [3, 4, 5, 4], 6, true);

    // birdie.animations.add('right_up', [12, 13, 14, 13], 6, true);
    birdFriend1.animations.add('right_up', [12, 13, 14, 13], 6, true);
    birdFriend2.animations.add('right_up', [12, 13, 14, 13], 6, true);
    birdFriend3.animations.add('right_up', [12, 13, 14, 13], 6, true);
    birdFriend4.animations.add('right_up', [12, 13, 14, 13], 6, true);
    birdFriend5.animations.add('right_up', [12, 13, 14, 13], 6, true);
    birdFriend6.animations.add('right_up', [12, 13, 14, 13], 6, true);

    // birdie.animations.add('left_down', [6, 7, 8, 7], 6, true);
    birdFriend1.animations.add('left_down', [6, 7, 8, 7], 6, true);
    birdFriend2.animations.add('left_down', [6, 7, 8, 7], 6, true);
    birdFriend3.animations.add('left_down', [6, 7, 8, 7], 6, true);
    birdFriend4.animations.add('left_down', [6, 7, 8, 7], 6, true);
    birdFriend5.animations.add('left_down', [6, 7, 8, 7], 6, true);
    birdFriend6.animations.add('left_down', [6, 7, 8, 7], 6, true);

    // birdie.animations.add('right_down', [15, 16, 17, 16], 6, true);
    birdFriend1.animations.add('right_down', [15, 16, 17, 16], 6, true);
    birdFriend2.animations.add('right_down', [15, 16, 17, 16], 6, true);
    birdFriend3.animations.add('right_down', [15, 16, 17, 16], 6, true);
    birdFriend4.animations.add('right_down', [15, 16, 17, 16], 6, true);
    birdFriend5.animations.add('right_down', [15, 16, 17, 16], 6, true);
    birdFriend6.animations.add('right_down', [15, 16, 17, 16], 6, true);

    // birdie.animations.add('shot', [24], 0, true);
    birdFriend1.animations.add('shot', [24], 0, true);
    birdFriend2.animations.add('shot', [24], 0, true);
    birdFriend3.animations.add('shot', [24], 0, true);
    birdFriend4.animations.add('shot', [24], 0, true);
    birdFriend5.animations.add('shot', [24], 0, true);
    birdFriend6.animations.add('shot', [24], 0, true);

    // birdie.animations.add('fall', [18], 0, true);
    birdFriend1.animations.add('fall', [18], 0, true);
    birdFriend2.animations.add('fall', [18], 0, true);
    birdFriend3.animations.add('fall', [18], 0, true);
    birdFriend4.animations.add('fall', [18], 0, true);
    birdFriend5.animations.add('fall', [18], 0, true);
    birdFriend6.animations.add('fall', [18], 0, true);

    boostReady = true;
    boosted = false;


}

    var fowl;

// bangBang = function(){
//             crosshair.enableBody = true;
//             game.physics.arcade.overlap(birdie, crosshair, winFunc, null, this);
//             crosshair.animations.play('bang');
                
//             console.log('BANG!'); 
//                 setTimeout(function()
//                     {
//                         crosshair.enable = false; 
//                         console.log('off');
//                         crosshair.animations.play('regular');
//                     }, 2000);
//             // setTimeout(function(){crosshair.body.destroy; console.log('off');}, 1000);
// };

//     function toggleBody() {

//     //  Here we simply disable the body entirely
//     //  This stops all motion and collision checks against it
//     //  without actually destroying the body object itself.

//     if (crosshair.body.enable)
//     {
//         crosshair.body.enable = false;
//     }
//     else
//     {
//         crosshair.body.enable = true;
//     }
// }

fire = setInterval(function()
{
    hairsight = game.add.sprite(crosshair.body.x + 50, crosshair.body.y + 50, 'crosshair');
    hairsight.scale.x = game.rnd.realInRange(.0001, .0001);
    hairsight.scale.y = game.rnd.realInRange(.0001, .0001);
    hairsight.enableBody = false;
    game.physics.arcade.enable(hairsight);
    // crosshair.enableBody = true;
    // gunshot.play();
    game.physics.arcade.overlap(birdFriend1, hairsight, birdFriend1Dead, null, this);
    game.physics.arcade.overlap(birdFriend2, hairsight, birdFriend2Dead, null, this);
    game.physics.arcade.overlap(birdFriend3, hairsight, birdFriend3Dead, null, this);
    game.physics.arcade.overlap(birdFriend4, hairsight, birdFriend4Dead, null, this);
    game.physics.arcade.overlap(birdFriend5, hairsight, birdFriend5Dead, null, this);
    game.physics.arcade.overlap(birdFriend6, hairsight, birdFriend6Dead, null, this);
    // game.physics.arcade.overlap(birdie, hairsight, winFunc, null, this);
    crosshair.animations.play('bang');

    console.log('FIRE');

reload = setTimeout(function()
{   
    hairsight.kill();
    crosshair.enableBody = false;
    crosshair.animations.play('regular');
    console.log('OFF');
    fire();
}, 50);
    reload(); 
}, 5000);

var shotUp = false
// var fallOut = function(fowl){
//     fowl.body.velocity.y = 600;
//     fowl.animations.play('fall');
// }
var falling = function(fowl){
    fowl.body.velocity.y = 600;
    fowl.animations.play('fall');
    fallSound.play();
}
function birdFriend1Dead()
{
    birdFriend1.body.collideWorldBounds = false;
    birdFriend1.body.velocity.x = 0;
    birdFriend1.body.velocity.y = 0;
    birdFriend1.animations.play('shot');
    setTimeout(function(){falling(birdFriend1);}, 800);
}
function birdFriend2Dead()
{
    birdFriend2.body.collideWorldBounds = false;
    birdFriend2.body.velocity.x = 0;
    birdFriend2.body.velocity.y = 0;
    birdFriend2.animations.play('shot');
    setTimeout(function(){falling(birdFriend2);}, 800);
}
function birdFriend3Dead()
{
    birdFriend3.body.collideWorldBounds = false;
    birdFriend3.body.velocity.x = 0;
    birdFriend3.body.velocity.y = 0;
    birdFriend3.animations.play('shot');
    setTimeout(function(){falling(birdFriend3);}, 800);
}
function birdFriend4Dead()
{
    birdFriend4.body.collideWorldBounds = false;
    birdFriend4.body.velocity.x = 0;
    birdFriend4.body.velocity.y = 0;
    birdFriend4.animations.play('shot');
    setTimeout(function(){falling(birdFriend4);}, 800);
}
function birdFriend5Dead()
{
    birdFriend5.body.collideWorldBounds = false;
    birdFriend5.body.velocity.x = 0;
    birdFriend5.body.velocity.y = 0;
    birdFriend5.animations.play('shot');
    setTimeout(function(){falling(birdFriend5);}, 800);
}
function birdFriend6Dead()
{
    birdFriend6.body.collideWorldBounds = false;
    birdFriend6.body.velocity.x = 0;
    birdFriend6.body.velocity.y = 0;
    birdFriend6.animations.play('shot');
    setTimeout(function(){falling(birdFriend6);}, 800);
}
function winFunc()
{
    shotUp = true
    // birdie.body.collideWorldBounds = false;
    // birdie.body.velocity.x = 0
    // birdie.body.velocity.y = 0
    // birdie.animations.play('shot')
    setTimeout(function() {
        wee.play();
    }, 800);
    setTimeout(function() {
        yipee.play();
    }, 1500);
    // timer.stop();
    // timer2.stop();
    finishTime = game.time.time - beginningTimeMS
    sessionStorage.setItem("fourthLevelTime", finishTime);
    var firstLevelTime = parseInt(sessionStorage.getItem("firstLevelTime"))
    var secondLevelTime = parseInt(sessionStorage.getItem("secondLevelTime"))
    var thirdLevelTime = parseInt(sessionStorage.getItem("thirdLevelTime"))

    totalsMS = firstLevelTime + secondLevelTime + thirdLevelTime + finishTime
    totalsS = (totalsMS / 1000).toFixed(2)
    // totals = (firstLevelTime + secondLevelTime + thirdLevelTime + finishTime) / 1000
    // sessionStorage.setItem("totalTime", totals)
    // game.debug.text('TIME: ' + totalsMS + 'ms', 850, 20);
    sessionStorage.setItem("totalTimeMS", totalsMS)
    sessionStorage.setItem("totalTime", totalsS)
    // setTimeout(function(){falling(birdie);}, 800);
    // setTimeout(function(){birdie.kill();}, 6000);
    console.log('WINNER!');
    // var levelChange = function() {
    // window.location.replace("http://reincarnage.herokuapp.com")};

    var levelChange = function() {
    window.location.replace("http://localhost:3000")};

    $('body').fadeOut(3800, function(){levelChange();});
};
// function winFunc(fowl)
// {
//     shotUp = true
//     fowl.body.collideWorldBounds = false;
//     fowl.body.velocity.x = 0
//     fowl.body.velocity.y = 0
//     fowl.animations.play('shot')

//     if (fowl === birdie)
//     {
//     setTimeout(function() {
//         wee.play();
//     }, 800);
//     setTimeout(function() {
//         yipee.play();
//     }, 1500);
//     // timer.stop();
//     // timer2.stop();
//     finishTime = game.time.time - beginningTimeMS
//     sessionStorage.setItem("fourthLevelTime", finishTime);
//     var firstLevelTime = parseInt(sessionStorage.getItem("firstLevelTime"))
//     var secondLevelTime = parseInt(sessionStorage.getItem("secondLevelTime"))
//     var thirdLevelTime = parseInt(sessionStorage.getItem("thirdLevelTime"))

//     totalsMS = firstLevelTime + secondLevelTime + thirdLevelTime + finishTime
//     totalsS = (totalsMS / 1000).toFixed(2)
//     // totals = (firstLevelTime + secondLevelTime + thirdLevelTime + finishTime) / 1000
//     // sessionStorage.setItem("totalTime", totals)
//     // game.debug.text('TIME: ' + totalsMS + 'ms', 850, 20);
//     sessionStorage.setItem("totalTimeMS", totalsMS)
//     sessionStorage.setItem("totalTime", totalsS)
//     setTimeout(function(){falling(birdie);}, 800);
//     // setTimeout(function(){birdie.kill();}, 6000);
//     console.log('WINNER!');
//     // var levelChange = function() {
//     // window.location.replace("http://reincarnage.herokuapp.com")};
//     var levelChange = function() {
//     window.location.replace("http://localhost:3000")};
//     $('body').fadeOut(3800, function(){levelChange();});
//     }
// };

fire();
function update(){

    initiateAnimations = function(fowl)
    {
        if (fowl.body.velocity.x >= 180 && fowl.body.velocity.y >= 180)
        {
            fowl.animations.play('right_down')
        }
        else if (fowl.body.velocity.x <= -180 && fowl.body.velocity.y >= 180)
        {
            fowl.animations.play('left_down')
        }
        else if (fowl.body.velocity.x >= 180 && fowl.body.velocity.y <= -180)
        {
            fowl.animations.play('right_up')
        }
        else if (fowl.body.velocity.x <= -180 && fowl.body.velocity.y <= -180)
        {
            fowl.animations.play('left_up')
        }
        else if (fowl.body.velocity.x >= 140)
        {
            fowl.animations.play('right')
        }
        else if (fowl.body.velocity.x <= -140)
        {
            fowl.animations.play('left')
        }
        else if (fowl.body.velocity.y > 0 && (fowl.body.velocity.x < 140 && fowl.body.velocity.x > -140))
        {
            if (fowl.body.velocity.y < 600)
            {
                fowl.animations.play('down')
            }
            else
            {
                fowl.animations.play('fall')
            }
        }
        else if (fowl.body.velocity.y < 0 && (fowl.body.velocity.x < 140 && fowl.body.velocity.x > -140))
        {
            fowl.animations.play('up')
        }
    }

        if (enterKey.isDown)
    {
        
        var levelChange = function() {
            window.location.replace("http://reincarnage.herokuapp.com/level4")};

        // var levelChange = function() {
        //     window.location.replace("http://localhost:3000/level4")};
            levelChange();
    }


    // birdie.animations.play('left');
    initiateAnimations(birdFriend1);
    initiateAnimations(birdFriend2);
    initiateAnimations(birdFriend3);
    initiateAnimations(birdFriend4);
    initiateAnimations(birdFriend5);
    initiateAnimations(birdFriend6);


}

// function updateCounter() {

//     total++;

// }

// function updateCounter2() {

//     total2++;

// }

  function render(){
        // game.debug.text('Time until event: ' + timer.duration.toFixed(0), 800, 40);
  }


$(function(){
    $('body').hide();
    $('body').fadeIn(2000);
})

</script>